/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.mycompany.myapp.domain;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;

@Entity
@Table(name = "book")
public class Book implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Book.class.getName());

    // Raw attributes
    private Integer id;
    private Boolean bestSeller;
    private Long extractBinary;
    private String extractContentType;
    private String extractFileName;
    private Long extractSize;
    private BigDecimal price;
    private LocalDate publicationDate;
    private String summary;
    private String title;

    // Many to one
    private Author coAuthor;
    private Author author;

    @Override
    public String entityClassName() {
        return Book.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Book id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [bestSeller] ------------------------

    @Column(name = "best_seller", length = 1)
    public Boolean getBestSeller() {
        return bestSeller;
    }

    public void setBestSeller(Boolean bestSeller) {
        this.bestSeller = bestSeller;
    }

    public Book bestSeller(Boolean bestSeller) {
        setBestSeller(bestSeller);
        return this;
    }
    // -- [extractBinary] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "extract_binary", precision = 10)
    public Long getExtractBinary() {
        return extractBinary;
    }

    public void setExtractBinary(Long extractBinary) {
        this.extractBinary = extractBinary;
    }

    public Book extractBinary(Long extractBinary) {
        setExtractBinary(extractBinary);
        return this;
    }
    // -- [extractContentType] ------------------------

    @Size(max = 100)
    @Column(name = "extract_content_type", length = 100)
    public String getExtractContentType() {
        return extractContentType;
    }

    public void setExtractContentType(String extractContentType) {
        this.extractContentType = extractContentType;
    }

    public Book extractContentType(String extractContentType) {
        setExtractContentType(extractContentType);
        return this;
    }
    // -- [extractFileName] ------------------------

    @Size(max = 100)
    @Column(name = "extract_file_name", length = 100)
    public String getExtractFileName() {
        return extractFileName;
    }

    public void setExtractFileName(String extractFileName) {
        this.extractFileName = extractFileName;
    }

    public Book extractFileName(String extractFileName) {
        setExtractFileName(extractFileName);
        return this;
    }
    // -- [extractSize] ------------------------

    @Digits(integer = 19, fraction = 0)
    @Column(name = "extract_size", precision = 19)
    public Long getExtractSize() {
        return extractSize;
    }

    public void setExtractSize(Long extractSize) {
        this.extractSize = extractSize;
    }

    public Book extractSize(Long extractSize) {
        setExtractSize(extractSize);
        return this;
    }
    // -- [price] ------------------------

    @Digits(integer = 18, fraction = 2)
    @NotNull
    @Column(name = "price", nullable = false, precision = 20, scale = 2)
    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public Book price(BigDecimal price) {
        setPrice(price);
        return this;
    }
    // -- [publicationDate] ------------------------

    @Column(name = "publication_date", length = 13)
    public LocalDate getPublicationDate() {
        return publicationDate;
    }

    public void setPublicationDate(LocalDate publicationDate) {
        this.publicationDate = publicationDate;
    }

    public Book publicationDate(LocalDate publicationDate) {
        setPublicationDate(publicationDate);
        return this;
    }
    // -- [summary] ------------------------

    @Size(max = 255)
    @Column(name = "summary")
    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public Book summary(String summary) {
        setSummary(summary);
        return this;
    }
    // -- [title] ------------------------

    @NotEmpty
    @Size(max = 100)
    @Column(name = "title", nullable = false, length = 100)
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Book title(String title) {
        setTitle(title);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Book.coAuthor ==> Author.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "co_author_id")
    @ManyToOne
    public Author getCoAuthor() {
        return coAuthor;
    }

    /**
     * Set the {@link #coAuthor} without adding this Book instance on the passed {@link #coAuthor}
     */
    public void setCoAuthor(Author coAuthor) {
        this.coAuthor = coAuthor;
    }

    public Book coAuthor(Author coAuthor) {
        setCoAuthor(coAuthor);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Book.author ==> Author.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "author_id", nullable = false)
    @ManyToOne
    public Author getAuthor() {
        return author;
    }

    /**
     * Set the {@link #author} without adding this Book instance on the passed {@link #author}
     */
    public void setAuthor(Author author) {
        this.author = author;
    }

    public Book author(Author author) {
        setAuthor(author);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Book withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Book && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Book instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("bestSeller", getBestSeller()) //
                .add("extractBinary", getExtractBinary()) //
                .add("extractContentType", getExtractContentType()) //
                .add("extractFileName", getExtractFileName()) //
                .add("extractSize", getExtractSize()) //
                .add("price", getPrice()) //
                .add("publicationDate", getPublicationDate()) //
                .add("summary", getSummary()) //
                .add("title", getTitle()) //
                .toString();
    }
}